""" 
2840 행운의 바퀴
문제 내용)
상덕이는 최근에 행운의 바퀴를 구매했다. 상덕이는 바퀴의 각 칸에 알파벳 대문자를 아래 그림과 같이 적었다.
바퀴에 같은 글자는 두 번 이상 등장하지 않는다. 또, 바퀴는 시계방향으로만 돌아간다. 바퀴 옆에는 화살표가 있는데, 이 화살표는 항상 한 곳을 가리키고 있으며, 돌아가는 동안 가리키는 글자는 바뀌게 된다. 위의 그림에서는 H를 가리키고 있다.
상덕이는 바퀴를 연속해서 K번 돌릴 것이다. 매번 바퀴를 돌릴 때 마다, 상덕이는 화살표가 가리키는 글자가 변하는 횟수와 어떤 글자에서 회전을 멈추었는지를 종이에 적는다.
희원이는 상덕이가 적어놓은 종이를 발견했다. 그 종이를 바탕으로 상덕이가 바퀴에 적은 알파벳을 알아내려고 한다.
상덕이가 종이에 적어놓은 내용과 바퀴의 칸의 수가 주어졌을 때, 바퀴에 적어놓은 알파벳을 알아내는 프로그램을 작성하시오.

입력)
첫째 줄에 바퀴의 칸의 수 N과 상덕이가 바퀴를 돌리는 횟수 K가 주어진다. (2 ≤ N ≤ 25, 1 ≤ K ≤ 100)
다음 줄부터 K줄에는 바퀴를 회전시켰을 때 화살표가 가리키는 글자가 몇 번 바뀌었는지를 나타내는 S와 회전을 멈추었을 때 가리키던 글자가 주어진다. (1 ≤ S ≤ 100)

출력)
첫째 줄에 마지막 회전에서 화살표가 가리키는 문자부터 시계방향으로 바퀴에 적어놓은 알파벳을 출력한다. 이때, 어떤 글자인지 결정하지 못하는 칸은 '?'를 출력한다. 만약, 상덕이가 적어놓은 종이에 해당하는 행운의 바퀴가 없다면 "!"를 출력한다. 

최초작성 2019.03.03 PBY
"""

import sys
sys.stdin = open('C:/Users/BY/Documents/Github/2840_input.txt','r')

N, K = list(map(int, input().split()))

# 바퀴 만들기
wheel = ['?' for _ in range(N)]

# 바퀴 채우기 => 시계 방향으로 돌아가는 것을 그대로 넣으니까 시계 반대 방향으로 채워졌다!!!
idx = 0
check = 0
for _ in range(K):
    run, letter = input().split()
    idx += int(run)
    idx %= N
    # 가능한 바퀴와 존재하지 않는 바퀴 처리
    if wheel[idx] == '?':
        wheel[idx] = letter
    elif wheel[idx] != letter: # 이게 else이면 틀리나?
        print("!")
        check = 1
        break
    
    # 내 자리에 지금 채웠더라도 문제가 생겼는지 추가로 확인해줘야한다.
    if letter in wheel[:idx] + wheel[idx+1:]: # 2) 해결을 위해 내 문자와 다르다로 체크
    # 1) 같은 문자 두 번 => 이걸 wheel[idx]라고 잘못 써놔서 !가 출력 안 되었다!!!!
    # 2) 단순히 같은 문자 두 번이라고 하면 내 위치가 맞을 때도 틀린 줄 알 수 있다.
        print("!")
        check = 1
        break

if check == 0:
    # 이어야 출력
    # idx부터 끝까지 + 0부터 idx -1까지
    
    print(''.join(wheel[:idx+1][::-1]+wheel[idx+1:][::-1]))

"""
처음에 바퀴를 뒤집어서 출력해야한다는 것은 거의 시간을 잡아먹지 않았는데,
! 처리에서 엄청나게 오래 걸렸다.
if문을 순차적으로도 병렬적으로도 하면 안 되고,
지금 위치에 내 문자를 넣어도 되는지 (?인지, 나랑 같은 문자인지 보고)
그 다음에 똑같은 문자가 2개인지를 따로 확인해줘야했다!!
"""

# visual studio는 실행시 ctrl + f5

